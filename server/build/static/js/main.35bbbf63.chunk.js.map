{"version":3,"sources":["theme.tsx","components/Help/Help.tsx","utils/axios.ts","utils/path.ts","utils/api.ts","components/MainTerminal/functions/cat.ts","components/MainTerminal/functions/cd.ts","components/MainTerminal/functions/cr.ts","utils/time.ts","components/MainTerminal/functions/ls.ts","components/MainTerminal/functions/mv.ts","components/MainTerminal/functions/rm.ts","components/MainTerminal/MainTerminal.tsx","components/App/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","palette","type","primary","main","lightBlue","secondary","deepPurple","error","red","A400","darkTheme","blue","purple","useStyles","makeStyles","theme","createStyles","returnButton","position","bottom","left","margin","spacing","largeIcon","fontSize","title","display","justifyContent","fontWeight","root","width","padding","heading","typography","pxToRem","fontWeightRegular","available","marginBottom","details","flexDirection","example","marginTop","Help","history","useHistory","classes","Tooltip","TransitionComponent","Zoom","placement","IconButton","className","onClick","push","Home","Typography","variant","Accordion","AccordionSummary","expandIcon","ExpandMore","id","AccordionDetails","AxiosInstance","axios","create","baseURL","removeTrailingSlash","str","endsWith","slice","getPath","workDir","path","isAbsolute","newWorkDir","abs","base","relative","stack","split","parts","i","length","pop","join","absolute","ltreeToPath","ltree","replace","replaceAll","countDepth","match","encodePath","encoded","base64url","encode","n","pad","padRight","getParentPaths","paths","substr","apiGetPath","level","a","params","encodedPath","get","response","console","log","data","apiGetExactPath","apiCreatePath","item","requestOptions","headers","body","post","apiUpdatePath","put","apiDeletePath","delete","cat","intendedPath","filedirs","filetype","cd","callback","cr","args","regex","RegExp","parents","index","indexOf","splice","splitPath","name","test","parentPaths","parentPath","parentSplitPath","parentName","parentPayload","childPayload","dateFmtString","ls","full","Number","parentDepth","strings","Array","isArray","forEach","r","generateString","fileDir","baseDepth","relativeDepth","prepend","size","iso","time","parseISO","format","formatCreated","created","formatUpdated","updated","mv","retString","sources","dest","dirData","childPath","source","rm","deletePaths","numrows","helpButton","right","MainTerminal","useState","setWorkDir","commands","description","usage","fn","welcomeMessage","promptLabel","style","minHeight","App","useMediaQuery","ThemeProvider","CssBaseline","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.35bbbf63.chunk.js","sourcesContent":["import { blue, deepPurple, lightBlue, purple, red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: lightBlue[500],\n    },\n    secondary: {\n      main: deepPurple[500],\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: blue[200],\n    },\n    secondary: {\n      main: purple[200],\n    },\n    error: {\n      main: red[500],\n    },\n  },\n})\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Theme,\n  Tooltip,\n  Typography,\n  Zoom,\n} from '@material-ui/core'\nimport { ExpandMore, Home } from '@material-ui/icons'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    returnButton: {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      margin: theme.spacing(1),\n    },\n    largeIcon: {\n      fontSize: '2em',\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(3),\n      fontWeight: 400,\n    },\n    root: {\n      width: '100%',\n      padding: theme.spacing(3),\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    available: {\n      marginBottom: theme.spacing(2),\n    },\n    details: {\n      flexDirection: 'column',\n    },\n    example: {\n      marginTop: theme.spacing(1),\n    },\n  })\n)\n\nexport default function Help() {\n  const history = useHistory()\n  const classes = useStyles()\n  return (\n    <div>\n      <Tooltip\n        title=\"Return to terminal\"\n        TransitionComponent={Zoom}\n        placement=\"right\"\n      >\n        <IconButton\n          className={classes.returnButton}\n          onClick={() => {\n            history.push('/')\n          }}\n        >\n          <Home className={classes.largeIcon} />\n        </IconButton>\n      </Tooltip>\n      <Typography variant=\"h3\" className={classes.title}>\n        Documentation\n      </Typography>\n      <div className={classes.root}>\n        <Typography variant=\"h5\" className={classes.available}>\n          Available functions\n        </Typography>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"cd\">\n            <Typography className={classes.heading}>\n              cd - Change Directory\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>cd DIR</code>\n            </Typography>\n            <Typography>\n              Change the current working directroy to DIR.\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>: <code>cd /var/lib</code>\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"cat\">\n            <Typography className={classes.heading}>\n              cat - Concatenate\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>cat FILE</code>\n            </Typography>\n            <Typography>\n              Prints the contents of a file to the terminal\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>: <code>cat /var/lib/file</code>\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"ls\">\n            <Typography className={classes.heading}>ls - List</Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>ls [-l] [LIMIT]</code>\n            </Typography>\n            <Typography>\n              List all files under the current working directory.\n            </Typography>\n            <Typography>\n              If the -l flag is provided, the file's full details are listed as\n              well. If a LIMIT is specified, files up to LIMIT levels deep will\n              be shown.\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>: <code>ls -l 4</code>\n            </Typography>\n            <Typography>\n              This command lists all files and their details 4 levels deep from\n              current working directory, showing for example\n              /var/lib/path/to/file from /var\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"cr\">\n            <Typography className={classes.heading}>cr - Create</Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>cr [-p] PATH [DATA]</code>\n            </Typography>\n            <Typography>\n              cr creates a new file or directory at the specified PATH.\n            </Typography>\n            <Typography>\n              If DATA is provided, the created entity is a file with text data\n              taken from DATA. If it is not, a directory is created instead.\n            </Typography>\n            <Typography>\n              If the -p flag is provided, all of the parent directories are\n              created if they don't already exist. If not, the command will\n              raise an error if the parent directory does not exist.\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>:{' '}\n              <code>cr -p /var/lib/path/to/test_file this is a file</code>\n            </Typography>\n            <Typography>\n              This command creates the file with name <code>test_file</code>,\n              putting in it the text data <code>this is a file</code>. Since the\n              -p option is specified, the parent directories (/var, /var/lib,\n              /var/lib/path, /var/lib/path/to) will be created if they don't\n              already exists.\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"mv\">\n            <Typography className={classes.heading}>mv - Move</Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>mv SOURCE... DEST</code>\n            </Typography>\n            <Typography>\n              mv moves all files and directories (recursively) specified by\n              SOURCE... to DEST.\n            </Typography>\n            <Typography>\n              If more than 2 path names are provided, the last path is\n              considered the destination DEST, and all previous paths are\n              considered source file/folders SOURCE.\n            </Typography>\n            <Typography>\n              If there is a conflict at the DEST (for example: moving /var to\n              /lib where /lib/var already exists), the SOURCE will be moved\n              under the existing folder if it is a folder, overwrite the file if\n              they are both files, and throw an error otherwise.\n            </Typography>\n            <Typography>\n              This command accepts the * operator, selecting all files in a\n              folder. By default, if the SOURCE is a directory, itself and all\n              of its children will be moved under DEST.\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>: <code>mv /var/* /bin /lib</code>\n            </Typography>\n            <Typography>\n              This command moves every file and directory under /var, as well as\n              the file/directory /bin, to under /lib. Assuming that /var\n              contains /var/file0 and /var/file1, and /bin contains /bin/file0\n              and /bin/file1, the resulting directory structure in /lib is\n              /lib/file0, /lib/file1, /lib/bin/file0, /lib/bin/file1.\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMore />} id=\"rm\">\n            <Typography className={classes.heading}>rm - Remove</Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            <Typography>\n              <b>Usage</b>: <code>rm PATH</code>\n            </Typography>\n            <Typography>\n              rm deletes the specified file or directory (recursively) at PATH.\n            </Typography>\n            <Typography>\n              This command accepts the * operator, deleting all files and\n              directories in a folder. By default, if the PATH is a directory,\n              itself and all of its children will be deleted.\n            </Typography>\n            <Typography className={classes.example}>\n              <b>Example</b>:{' '}\n              <code>rm /lib/*</code>\n            </Typography>\n            <Typography>\n              This command deletes everything under the folder /lib, leaving /lib an empty folder.\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    </div>\n  )\n}\n","import axios from 'axios'\n\nexport const AxiosInstance = axios.create({\n  baseURL: 'https://virtualfs.herokuapp.com/api',\n})\n\n\n","import { isAbsolute } from 'path'\nimport base64url from 'base64url'\n\nfunction removeTrailingSlash(str: string) {\n  if (str == '/') return str\n  return str.endsWith('/') ? str.slice(0, -1) : str\n}\n\nfunction absolute(base, relative) {\n  const stack = base.split(\"/\"),\n      parts = relative.split(\"/\");\n  for (let i=0; i<parts.length; i++) {\n      if (parts[i] == \".\")\n          continue;\n      if (parts[i] == \"..\")\n          stack.pop();\n      else\n          stack.push(parts[i]);\n  }\n  return stack.join(\"/\");\n}\n\nexport function getPath(workDir: string, path: string) {\n  if (isAbsolute(path)) return path\n  // for compatibility with the absolute func\n  let newWorkDir = workDir\n  path = removeTrailingSlash(path)\n  if (workDir == '/') {\n    if (path == '.' || path == '..') {\n      return workDir\n    } \n    newWorkDir = ''\n  }\n  const abs = absolute(newWorkDir, path)\n  return removeTrailingSlash(abs ? abs : \"/\")\n}\n\nexport function ltreeToPath(ltree: string) {\n  if (ltree == 'root') return '/'\n\n  const ltreeNoRoot = ltree.replace('root.', '/')\n  return ltreeNoRoot.replaceAll('.', '/')\n}\n\n\nexport function countDepth(path: string) {\n  return (path.match(/\\//g) || []).length\n}\n\nfunction padRight(str, n, pad) {\n  const length = str.length\n  if (n > length) for (let i = 0; i < n - length; i++) str += pad\n  return str\n}\n\nexport function encodePath(path: string) {\n  const encoded = base64url.encode(path)\n  return padRight(encoded, encoded.length + (4 - encoded.length % 4) % 4, '=')\n}\n\nexport function getParentPaths(path: string) {\n  const paths: string[] = []\n  for(let i = 1 ; i < path.length ; i++) {\n    if(path[i]==='/') paths.push(path.substr(0,i));\n  }\n\n  return paths\n}","import { AxiosResponse } from \"axios\"\nimport { AxiosInstance } from \"./axios\"\nimport { encodePath } from \"./path\"\n\nexport async function apiGetPath(path:string , level:number) {\n  const params = {\n    level: level\n  }\n  const encodedPath = encodePath(path)\n\n  let response: AxiosResponse<any>\n  try {\n      response = await AxiosInstance.get(`/${encodedPath}`, {params})\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}\n\nexport async function apiGetExactPath(path:string) {\n  const encodedPath = encodePath(path)\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.get(`/${encodedPath}/exact`)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return 0 \n  }\n\n  return response.data ? response.data : 0\n}\n\nexport type CreatePathPayload = {\n  filedirs: {\n    name: string,\n    data: string,\n    filetype: string,\n  },\n  path: string\n}\n\nexport async function apiCreatePath(item: CreatePathPayload,) {\n  const requestOptions = {\n    headers: { 'Content-Type': 'application/json' },\n    body: item\n  }\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.post(`/`, item, requestOptions)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return 0 \n  }\n\n  return response.data ? response.data : 0\n}\n\nexport type UpdatePathPayload = {\n  source:string,\n  dest:string\n}\n\nexport async function apiUpdatePath(item: UpdatePathPayload) {\n  const requestOptions = {\n    headers: { 'Content-Type': 'application/json' },\n    body: item\n  }\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.put(`/`, item, requestOptions)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}\n\nexport async function apiDeletePath(path:string) {\n\n  const encodedPath = encodePath(path)\n\n  let response: AxiosResponse<any>\n  try {\n      response = await AxiosInstance.delete(`/${encodedPath}`)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}","import { apiGetExactPath } from '../../../utils/api'\nimport { getPath } from '../../../utils/path'\n\nexport async function cat(workDir: string, ...args) {\n  if (args.length > 1 || args.length == 0) {\n    return 'Please provide only 1 arg to cd'\n  }\n\n  if (args[0] == '') {\n    return 'Please provide a valid path!'\n  }\n\n  const intendedPath = getPath(workDir, args[0])\n  const data = await apiGetExactPath(intendedPath)\n\n  if (data) {\n    if (data.filedirs.filetype == 'file') {\n      return data.filedirs.data\n    }\n    return \"Provided path is a directory\"\n  } \n\n  return \"Provided path doesn't exist\"\n\n}\n","import { apiGetExactPath } from '../../../utils/api'\nimport { getPath } from '../../../utils/path'\n\nexport async function cd(workDir: string, callback, ...args) {\n  if (args.length > 1 || args.length == 0) {\n    return 'Please provide only 1 arg to cd'\n  }\n\n  if (args[0] == '') {\n    return 'Please provide a valid path!'\n  }\n\n  const intendedPath = getPath(workDir, args[0])\n  const data = await apiGetExactPath(intendedPath)\n\n  if (data) {\n    if (data.filedirs.filetype == 'directory') {\n      callback(intendedPath)\n      return\n    }\n    return \"Destination is a file\"\n  } \n\n  return \"Destination doesn't exist\"\n\n}\n","import { apiCreatePath, CreatePathPayload } from '../../../utils/api'\nimport { getParentPaths, getPath } from '../../../utils/path'\n\nexport async function cr(workDir: string, ...args) {\n  if (args.length < 1) {\n    return 'Usage: cr [-p] PATH [DATA]'\n  }\n  const regex = RegExp(/^[a-zA-Z0-9 _-]+$/)\n  let data = ''\n  let parents = false\n\n  const index = args.indexOf('-p')\n  if (index >= 0) {\n    parents = true\n    args.splice(index, 1)\n  }\n\n  // must be path and data respectively, try to convert\n  if (args.length < 1) {\n    return 'Usage: cr [-p] PATH [DATA]'\n  }\n\n  const path = args[0]\n  args.splice(0, 1)\n  if (path == '') {\n    return 'PATH must not be empty'\n  }\n\n  if (args.length > 0) {\n    data = args.join(' ')\n  }\n  const intendedPath = getPath(workDir, path)\n  const splitPath = intendedPath.split('/')\n  const name = splitPath[splitPath.length - 1]\n  if (!regex.test(name)) {\n    return 'Name must be valid'\n  }\n\n  if (parents) {\n    const parentPaths = getParentPaths(intendedPath)\n    for (let i = 0; i < parentPaths.length; i++) {\n      const parentPath = parentPaths[i]\n      const parentSplitPath = parentPath.split('/')\n      const parentName = parentSplitPath[parentSplitPath.length - 1]\n      if (!regex.test(parentName)) {\n        return 'Parent name must be valid'\n      }\n      const parentPayload: CreatePathPayload = {\n        filedirs: {\n          name: parentName,\n          data: '',\n          filetype: 'directory',\n        },\n        path: splitPath.slice(0, -1).join('/') || '/',\n      }\n      await apiCreatePath(parentPayload)\n    }\n  }\n\n  const childPayload: CreatePathPayload = {\n    filedirs: {\n      name: name,\n      data: data,\n      filetype: data ? 'file' : 'directory',\n    },\n    path: splitPath.slice(0, -1).join('/') || '/',\n  }\n  const apiData = await apiCreatePath(childPayload)\n\n  if (apiData) {\n    return `${intendedPath} successfully created `\n  }\n\n  return `Could not create ${intendedPath}`\n}\n","import { format, parseISO } from \"date-fns\";\n\nconst dateFmtString = \"yyyy-MM-dd HH:mm:ss OOOO\"\nexport function formatCreated(iso: string) {\n  const time = parseISO(iso)\n  \n  return `Created: ${format(time, dateFmtString)}`\n}\n\nexport function formatUpdated(iso: string) {\n  const time = parseISO(iso)\n  \n  return `Updated: ${format(time, dateFmtString)}`\n}","import { apiGetPath } from \"../../../utils/api\"\nimport { countDepth,  ltreeToPath } from \"../../../utils/path\"\nimport { formatCreated, formatUpdated } from \"../../../utils/time\"\n\nexport async function ls(workDir: string, ...args) {\n  if (args.length > 2) {\n    return \"Too many arguments!\"\n  }\n  let full = false\n  let level = 1\n\n  const index = args.indexOf('-l')\n  if (index >= 0) {\n    full = true\n    args.splice(index, 1)\n  }\n\n  \n  // must be limit, try to convert \n  if (args.length == 1) {\n    level = Number(args[0])\n    if (!level) {\n      return \"Level must be a number\"\n    }\n  } else if (args.length > 1) { //\n      return \"Usage: ls [-l] [LIMIT]\"\n  }\n  \n  const data = await apiGetPath(workDir, level)\n\n  const parentDepth = countDepth(workDir)\n  const strings: string[] = []\n\n  strings.push(`${workDir}`)\n  if (Array.isArray(data)) {\n    data.forEach((r) => {\n      strings.push(generateString(r.filedirs, full, parentDepth))\n    })\n  }\n\n  return `${strings.join('\\n')}`\n}\n\nfunction generateString(fileDir: any, full: boolean, baseDepth: number) {\n  const path = ltreeToPath(fileDir.path)\n  const relativeDepth = countDepth(path) - baseDepth\n  let prepend = \"\"\n  for (let i = 0 ; i < relativeDepth; i++) {\n    prepend += '||||'\n  }\n\n  prepend += '---'\n\n  if (full) {\n    return `${prepend} ${path} | ${fileDir.filetype} | Size: ${fileDir.size} | ${formatCreated(fileDir.created)} | ${formatUpdated(fileDir.updated)} `\n  } else {\n    return `${prepend} ${path} | ${fileDir.filetype}`\n  }\n}","import {\n  apiGetPath,\n  apiUpdatePath,\n  UpdatePathPayload,\n} from '../../../utils/api'\nimport { getPath, ltreeToPath } from '../../../utils/path'\n\nexport async function mv(workDir, ...args) {\n  let retString = ''\n  if (args.length < 2) {\n    return 'Please provide at least 2 args to mv'\n  }\n  const sources: string[] = []\n  const dest = getPath(workDir, args.pop())\n\n  for (let i = 0; i < args.length; i++) {\n    const intendedPath = getPath(workDir, args[i])\n    const splitPath = intendedPath.split('/')\n    const name = splitPath[splitPath.length - 1]\n\n    // Selecting everything in the directory if the file name is *\n    if (name == '*' || name == '.*') {\n      const parentPath = splitPath.slice(0, -1).join('/') || '/'\n      const dirData = await apiGetPath(parentPath, 1)\n      if (dirData.length > 0) {\n        dirData.forEach((data) => {\n          const fileDir = data.filedirs\n          const childPath = ltreeToPath(fileDir.path)\n          sources.push(childPath)\n        })\n      }\n    } else {\n      sources.push(intendedPath)\n    }\n  }\n\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i]\n    const item: UpdatePathPayload = {\n      source: source,\n      dest: dest,\n    }\n    const data = await apiUpdatePath(item)\n    if (data.length == 0) {\n      retString += `Could not move ${source} to ${dest}\\n`\n    } else {\n      retString += `Moved ${source} to ${dest}\\n`\n    }\n  }\n\n  return retString ? retString : \"Sources can't be empty\"\n}\n","import {\n  apiDeletePath,\n  apiGetPath,\n} from '../../../utils/api'\nimport { getPath, ltreeToPath } from '../../../utils/path'\n\nexport async function rm(workDir, ...args) {\n  let retString = \"\"\n  const deletePaths: string[] = []\n  if (args.length != 1) {\n    return 'Please provide only 1 arg to rm'\n  }\n\n  if (args[0] == '') {\n    return 'Please provide a valid path!'\n  }\n\n  const intendedPath = getPath(workDir, args[0])\n  const splitPath = intendedPath.split('/')\n  const name = splitPath[splitPath.length - 1]\n\n  // Selecting everything in the directory if the file name is *\n  if (name == '*' || name == '.*') {\n    const parentPath = splitPath.slice(0, -1).join('/') || '/'\n    const dirData = await apiGetPath(parentPath, 1)\n    if (dirData.length > 0) {\n      dirData.forEach((data) => {\n        const fileDir = data.filedirs\n        const childPath = ltreeToPath(fileDir.path)\n        deletePaths.push(childPath)\n      })\n    }\n  } else {\n    deletePaths.push(intendedPath)\n  }\n\n  for (let i = 0; i < deletePaths.length; i++) {\n    const path = deletePaths[i]\n    const data = await apiDeletePath(path)\n    if (data.numrows == 0) {\n      retString += `Could not delete ${path}\\n`\n    } else {\n      retString += `Deleted ${path}\\n`\n    }\n  }\n\n  return retString\n}\n","import {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Zoom,\n} from '@material-ui/core'\nimport { Help } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport Terminal from 'react-console-emulator'\nimport { useHistory } from 'react-router-dom'\nimport { cat } from './functions/cat'\nimport { cd } from './functions/cd'\nimport { cr } from './functions/cr'\nimport { ls } from './functions/ls'\nimport { mv } from './functions/mv'\nimport { rm } from './functions/rm'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    helpButton: {\n      position: 'fixed',\n      bottom: 0,\n      right: 0,\n    },\n    largeIcon: {\n      fontSize: '2em',\n    },\n  })\n)\n\nexport default function MainTerminal() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [workDir, setWorkDir] = useState('/')\n\n  const commands = {\n    cd: {\n      description: 'Change current working directory.',\n      usage: 'cd DIR',\n      fn: (...args) => cd(workDir, setWorkDir, ...args),\n    },\n    cat: {\n      description: 'Print the contents of a file to the command line.',\n      usage: 'cat FILE',\n      fn: (...args) => cat(workDir, ...args),\n    },\n    ls: {\n      description:\n        \"Show what's in the current and below directories with LIMIT\",\n      usage: 'ls [-l] [LIMIT]',\n      fn: (...args) => ls(workDir, ...args),\n    },\n    cr: {\n      description: 'Create new files and directories',\n      usage: 'cr [-p] PATH [DATA]',\n      fn: (...args) => cr(workDir, ...args),\n    },\n    mv: {\n      description: 'Move all source files from source to dest',\n      usage: 'mv SOURCE... DEST',\n      fn: (...args) => mv(workDir, ...args),\n    },\n    rm: {\n      description: 'Remove a file/folder and all its children',\n      usage: 'rm PATH',\n      fn: (...args) => rm(workDir, ...args),\n    },\n  }\n\n  return (\n    <div>\n      <Terminal\n        commands={commands}\n        welcomeMessage={'Type help or click the question mark to get started'}\n        promptLabel={`me@React:${workDir}$`}\n        style={{ minHeight: '100vh' }}\n      />\n      <Tooltip title=\"Help page\" TransitionComponent={Zoom} placement=\"left\">\n        <IconButton\n          className={classes.helpButton}\n          onClick={() => {\n            history.push('/help')\n          }}\n        >\n          <Help className={classes.largeIcon} />\n        </IconButton>\n      </Tooltip>\n    </div>\n  )\n}\n","\nimport { CssBaseline, ThemeProvider, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport { darkTheme, lightTheme } from '../../theme';\nimport Help from '../Help';\nimport MainTerminal from '../MainTerminal';\nimport './App.css';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  const theme = prefersDarkMode ? darkTheme : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n        <Route path='/help' component={Help} />\n        <Route path='/' component={MainTerminal} />\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <div>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </div>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}
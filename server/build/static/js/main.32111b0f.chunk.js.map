{"version":3,"sources":["theme.tsx","components/Help/Help.tsx","utils/axios.ts","utils/path.ts","utils/api.ts","components/MainTerminal/functions/cd.ts","components/MainTerminal/functions/cr.ts","utils/time.ts","components/MainTerminal/functions/ls.ts","components/MainTerminal/functions/mv.ts","components/MainTerminal/functions/rm.ts","components/MainTerminal/MainTerminal.tsx","components/App/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","palette","type","primary","main","lightBlue","secondary","deepPurple","error","red","A400","darkTheme","blue","purple","MainTerminal","Typography","variant","AxiosInstance","axios","create","baseURL","removeTrailingSlash","str","endsWith","slice","getPath","workDir","path","isAbsolute","newWorkDir","abs","base","relative","stack","split","parts","i","length","pop","push","join","absolute","ltreeToPath","ltree","replace","replaceAll","countDepth","match","encodePath","encoded","base64url","encode","n","pad","padRight","getParentPaths","paths","substr","apiGetPath","level","a","params","encodedPath","get","response","console","log","data","apiGetExactPath","apiCreatePath","item","requestOptions","headers","body","post","apiUpdatePath","put","apiDeletePath","delete","cd","callback","intendedPath","filedirs","filetype","cr","args","parents","index","indexOf","splice","parentPaths","parentPath","splitPath","parentPayload","name","childPayload","dateFmtString","ls","full","Number","parentDepth","strings","Array","isArray","forEach","r","generateString","fileDir","baseDepth","relativeDepth","prepend","size","iso","time","parseISO","format","formatCreated","created","formatUpdated","updated","mv","retString","sources","dest","dirData","childPath","source","rm","deletePaths","numrows","useState","setWorkDir","commands","echo","description","usage","fn","from","welcomeMessage","promptLabel","style","minHeight","App","theme","useMediaQuery","ThemeProvider","CssBaseline","component","Help","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.32111b0f.chunk.js","sourcesContent":["import { blue, deepPurple, lightBlue, purple, red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nexport const lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: lightBlue[500],\n    },\n    secondary: {\n      main: deepPurple[500],\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: blue[200],\n    },\n    secondary: {\n      main: purple[200],\n    },\n    error: {\n      main: red[500],\n    },\n  },\n})\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\n\nexport default function MainTerminal() {\n  return (\n    <Typography variant=\"h5\">\n      This is a help page\n    </Typography>\n  )\n}\n","import axios from 'axios'\n\nexport const AxiosInstance = axios.create({\n  baseURL: 'https://virtualfs.herokuapp.com/api',\n})\n\n\n","import { isAbsolute } from 'path'\nimport base64url from 'base64url'\n\nfunction removeTrailingSlash(str: string) {\n  if (str == '/') return str\n  return str.endsWith('/') ? str.slice(0, -1) : str\n}\n\nfunction absolute(base, relative) {\n  const stack = base.split(\"/\"),\n      parts = relative.split(\"/\");\n  for (let i=0; i<parts.length; i++) {\n      if (parts[i] == \".\")\n          continue;\n      if (parts[i] == \"..\")\n          stack.pop();\n      else\n          stack.push(parts[i]);\n  }\n  return stack.join(\"/\");\n}\n\nexport function getPath(workDir: string, path: string) {\n  if (isAbsolute(path)) return path\n  // for compatibility with the absolute func\n  let newWorkDir = workDir\n  path = removeTrailingSlash(path)\n  if (workDir == '/') {\n    if (path == '.' || path == '..') {\n      return workDir\n    } \n    newWorkDir = ''\n  }\n  const abs = absolute(newWorkDir, path)\n  return removeTrailingSlash(abs ? abs : \"/\")\n}\n\nexport function ltreeToPath(ltree: string) {\n  if (ltree == 'root') return '/'\n\n  const ltreeNoRoot = ltree.replace('root.', '/')\n  return ltreeNoRoot.replaceAll('.', '/')\n}\n\n\nexport function countDepth(path: string) {\n  return (path.match(/\\//g) || []).length\n}\n\nfunction padRight(str, n, pad) {\n  const length = str.length\n  if (n > length) for (let i = 0; i < n - length; i++) str += pad\n  return str\n}\n\nexport function encodePath(path: string) {\n  const encoded = base64url.encode(path)\n  return padRight(encoded, encoded.length + (4 - encoded.length % 4) % 4, '=')\n}\n\nexport function getParentPaths(path: string) {\n  const paths: string[] = []\n  for(let i = 1 ; i < path.length ; i++) {\n    if(path[i]==='/') paths.push(path.substr(0,i));\n  }\n\n  return paths\n}","import { AxiosResponse } from \"axios\"\nimport { AxiosInstance } from \"./axios\"\nimport { encodePath } from \"./path\"\n\nexport async function apiGetPath(path:string , level:number) {\n  const params = {\n    level: level\n  }\n  const encodedPath = encodePath(path)\n\n  let response: AxiosResponse<any>\n  try {\n      response = await AxiosInstance.get(`/${encodedPath}`, {params})\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}\n\nexport async function apiGetExactPath(path:string) {\n  const encodedPath = encodePath(path)\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.get(`/${encodedPath}/exact`)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return 0 \n  }\n\n  return response.data ? response.data : 0\n}\n\nexport type CreatePathPayload = {\n  filedirs: {\n    name: string,\n    data: string,\n    filetype: string,\n  },\n  path: string\n}\n\nexport async function apiCreatePath(item: CreatePathPayload,) {\n  const requestOptions = {\n    headers: { 'Content-Type': 'application/json' },\n    body: item\n  }\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.post(`/`, item, requestOptions)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return 0 \n  }\n\n  return response.data ? response.data : 0\n}\n\nexport type UpdatePathPayload = {\n  source:string,\n  dest:string\n}\n\nexport async function apiUpdatePath(item: UpdatePathPayload) {\n  const requestOptions = {\n    headers: { 'Content-Type': 'application/json' },\n    body: item\n  }\n  let response: AxiosResponse<any>\n  try {\n    response = await AxiosInstance.put(`/`, item, requestOptions)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}\n\nexport async function apiDeletePath(path:string) {\n\n  const encodedPath = encodePath(path)\n\n  let response: AxiosResponse<any>\n  try {\n      response = await AxiosInstance.delete(`/${encodedPath}`)\n  }\n  catch (err) {\n    console.log(err.response.data.error)\n    return []\n  }\n\n  return response.data ? response.data : []\n}","import { apiGetExactPath } from '../../../utils/api'\nimport { getPath } from '../../../utils/path'\n\nexport async function cd(workDir: string, callback, ...args) {\n  if (args.length > 1 || args.length == 0) {\n    return 'Please provide only 1 arg to cd'\n  }\n\n  if (args[0] == '') {\n    return 'Please provide a valid path!'\n  }\n\n  const intendedPath = getPath(workDir, args[0])\n  const data = await apiGetExactPath(intendedPath)\n\n  if (data) {\n    if (data.filedirs.filetype == 'directory') {\n      callback(intendedPath)\n      return\n    }\n    return \"Destination is a file\"\n  } \n\n  return \"Destination doesn't exist\"\n\n}\n","import { apiCreatePath, CreatePathPayload } from '../../../utils/api'\nimport { getParentPaths, getPath } from '../../../utils/path'\n\nexport async function cr(workDir: string, ...args) {\n  if (args.length < 1) {\n    return 'Usage: cr [-p] PATH [DATA]'\n  }\n\n  let data = ''\n  let parents = false\n\n  const index = args.indexOf('-p')\n  if (index >= 0) {\n    parents = true\n    args.splice(index, 1)\n  }\n\n  // must be path and data respectively, try to convert\n  if (args.length < 1) {\n    return 'Usage: cr [-p] PATH [DATA]'\n  }\n\n  const path = args[0]\n  args.splice(0, 1)\n  if (path == '') {\n    return 'PATH must not be empty'\n  }\n\n  if (args.length > 0) {\n    data = args.join(' ')\n  }\n  const intendedPath = getPath(workDir, path)\n\n  if (parents) {\n    const parentPaths = getParentPaths(intendedPath)\n    for (let i = 0; i < parentPaths.length; i++) {\n      const parentPath = parentPaths[i]\n      const splitPath = parentPath.split('/')\n      const parentPayload: CreatePathPayload = {\n        filedirs: {\n          name: splitPath[splitPath.length - 1],\n          data: '',\n          filetype: 'directory',\n        },\n        path: splitPath.slice(0, -1).join('/') || '/',\n      }\n      await apiCreatePath(parentPayload)\n    }\n  }\n\n  const splitPath = intendedPath.split('/')\n  const childPayload: CreatePathPayload = {\n    filedirs: {\n      name: splitPath[splitPath.length - 1],\n      data: data,\n      filetype: data ? 'file' : 'directory',\n    },\n    path: splitPath.slice(0, -1).join('/') || '/',\n  }\n  const apiData = await apiCreatePath(childPayload)\n\n  if (apiData) {\n    return `${intendedPath} successfully created `\n  }\n\n  return `Could not create ${intendedPath}`\n}\n","import { format, parseISO } from \"date-fns\";\n\nconst dateFmtString = \"yyyy-MM-dd HH:mm:ss OOOO\"\nexport function formatCreated(iso: string) {\n  const time = parseISO(iso)\n  \n  return `Created: ${format(time, dateFmtString)}`\n}\n\nexport function formatUpdated(iso: string) {\n  const time = parseISO(iso)\n  \n  return `Updated: ${format(time, dateFmtString)}`\n}","import { apiGetPath } from \"../../../utils/api\"\nimport { countDepth,  ltreeToPath } from \"../../../utils/path\"\nimport { formatCreated, formatUpdated } from \"../../../utils/time\"\n\nexport async function ls(workDir: string, ...args) {\n  if (args.length > 2) {\n    return \"Too many arguments!\"\n  }\n  let full = false\n  let level = 1\n\n  const index = args.indexOf('-l')\n  if (index >= 0) {\n    full = true\n    args.splice(index, 1)\n  }\n\n  \n  // must be limit, try to convert \n  if (args.length == 1) {\n    level = Number(args[0])\n    if (!level) {\n      return \"Level must be a number\"\n    }\n  } else if (args.length > 1) { //\n      return \"Usage: ls [-l] [LIMIT]\"\n  }\n  \n  const data = await apiGetPath(workDir, level)\n\n  const parentDepth = countDepth(workDir)\n  const strings: string[] = []\n\n  strings.push(`${workDir}`)\n  if (Array.isArray(data)) {\n    data.forEach((r) => {\n      strings.push(generateString(r.filedirs, full, parentDepth))\n    })\n  }\n\n  return `${strings.join('\\n')}`\n}\n\nfunction generateString(fileDir: any, full: boolean, baseDepth: number) {\n  const path = ltreeToPath(fileDir.path)\n  const relativeDepth = countDepth(path) - baseDepth\n  let prepend = \"\"\n  for (let i = 0 ; i < relativeDepth; i++) {\n    prepend += '||||'\n  }\n\n  prepend += '---'\n\n  if (full) {\n    return `${prepend} ${path} | ${fileDir.filetype} | Size: ${fileDir.size} | ${formatCreated(fileDir.created)} | ${formatUpdated(fileDir.updated)} `\n  } else {\n    return `${prepend} ${path} | ${fileDir.filetype}`\n  }\n}","import {\n  apiGetPath,\n  apiUpdatePath,\n  UpdatePathPayload,\n} from '../../../utils/api'\nimport { getPath, ltreeToPath } from '../../../utils/path'\n\nexport async function mv(workDir, ...args) {\n  let retString = ''\n  if (args.length < 2) {\n    return 'Please provide at least 2 args to mv'\n  }\n  const sources: string[] = []\n  const dest = getPath(workDir, args.pop())\n\n  for (let i = 0; i < args.length; i++) {\n    const intendedPath = getPath(workDir, args[i])\n    const splitPath = intendedPath.split('/')\n    const name = splitPath[splitPath.length - 1]\n\n    // Selecting everything in the directory if the file name is *\n    if (name == '*' || name == '.*') {\n      const parentPath = splitPath.slice(0, -1).join('/') || '/'\n      const dirData = await apiGetPath(parentPath, 1)\n      if (dirData.length > 0) {\n        dirData.forEach((data) => {\n          const fileDir = data.filedirs\n          const childPath = ltreeToPath(fileDir.path)\n          sources.push(childPath)\n        })\n      }\n    } else {\n      sources.push(intendedPath)\n    }\n  }\n\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i]\n    const item: UpdatePathPayload = {\n      source: source,\n      dest: dest,\n    }\n    const data = await apiUpdatePath(item)\n    if (data.length == 0) {\n      retString += `Could not move ${source} to ${dest}\\n`\n    } else {\n      retString += `Moved ${source} to ${dest}\\n`\n    }\n  }\n\n  return retString ? retString : \"Sources can't be empty\"\n}\n","import {\n  apiDeletePath,\n  apiGetPath,\n} from '../../../utils/api'\nimport { getPath, ltreeToPath } from '../../../utils/path'\n\nexport async function rm(workDir, ...args) {\n  let retString = \"\"\n  const deletePaths: string[] = []\n  if (args.length != 1) {\n    return 'Please provide only 1 arg to rm'\n  }\n\n  if (args[0] == '') {\n    return 'Please provide a valid path!'\n  }\n\n  const intendedPath = getPath(workDir, args[0])\n  const splitPath = intendedPath.split('/')\n  const name = splitPath[splitPath.length - 1]\n\n  // Selecting everything in the directory if the file name is *\n  if (name == '*' || name == '.*') {\n    const parentPath = splitPath.slice(0, -1).join('/') || '/'\n    const dirData = await apiGetPath(parentPath, 1)\n    if (dirData.length > 0) {\n      dirData.forEach((data) => {\n        const fileDir = data.filedirs\n        const childPath = ltreeToPath(fileDir.path)\n        deletePaths.push(childPath)\n      })\n    }\n  } else {\n    deletePaths.push(intendedPath)\n  }\n\n  for (let i = 0; i < deletePaths.length; i++) {\n    const path = deletePaths[i]\n    const data = await apiDeletePath(path)\n    if (data.numrows == 0) {\n      retString += `Could not delete ${path}\\n`\n    } else {\n      retString += `Deleted ${path}\\n`\n    }\n  }\n\n  return retString\n}\n","import { useState } from 'react'\nimport Terminal from 'react-console-emulator'\nimport { cd } from './functions/cd'\nimport { cr } from './functions/cr'\nimport { ls } from './functions/ls'\nimport { mv } from './functions/mv'\nimport { rm } from './functions/rm'\n\nexport default function MainTerminal() {\n  const [workDir, setWorkDir] = useState('/')\n\n  const commands = {\n    echo: {\n      description: 'Echo a passed string.',\n      usage: 'echo <string>',\n      fn: function (...args) {\n        return `${Array.from(args).join(' ')}`\n      },\n    },\n    cd: {\n      description: 'Change current working directory.',\n      usage: 'cd <location>',\n      fn: (...args) => cd(workDir, setWorkDir, ...args),\n    },\n    ls: {\n      description:\n        \"Show what's in the current and below directories with LIMIT\",\n      usage: 'ls [-l] [LIMIT]',\n      fn: (...args) => ls(workDir, ...args),\n    },\n    cr: {\n      description:\n        \"Create new files and directories\",\n      usage: 'cr [-p] PATH [DATA]',\n      fn: (...args) => cr(workDir, ...args),\n    },\n    mv: {\n      description:\n        \"Move all source files from source to dest\",\n      usage: 'mv SOURCE... DEST',\n      fn: (...args) => mv(workDir, ...args),\n    },\n    rm: {\n      description:\n        \"Remove a file/folder and all its children\",\n      usage: 'rm PATH',\n      fn: (...args) => rm(workDir, ...args),\n    },\n  }\n\n  return (\n    <Terminal\n      commands={commands}\n      welcomeMessage={'Type help to get started'}\n      promptLabel={`me@React:${workDir}$`}\n      style={{minHeight: '100vh'}}\n    />\n  )\n}\n","\nimport { CssBaseline, ThemeProvider, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport { darkTheme, lightTheme } from '../../theme';\nimport Help from '../Help';\nimport MainTerminal from '../MainTerminal';\nimport './App.css';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  const theme = prefersDarkMode ? darkTheme : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n        <Route path='/help' component={Help} />\n        <Route path='/' component={MainTerminal} />\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <div>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </div>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}